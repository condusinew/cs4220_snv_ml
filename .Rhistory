knitr::opts_chunk$set(echo = TRUE)
setwd("/Users/cindyyu/Desktop/CS4220")
library(readxl)
library(tidyverse)
library(caTools)
real1_df <- read.table("snv-parse-real1.txt", header = T)
real2.1_df <- read.table("snv-parse-real2_part1.txt", header = T)
syn1_df <- read.table("snv-parse-syn1.txt", header = T)
syn2_df <- read.table("snv-parse-syn2.txt", header = T)
syn3_df <- read.table("snv-parse-syn3.txt", header = T)
syn4_df <- read.table("snv-parse-syn4.txt", header = T)
syn5_df <- read.table("snv-parse-syn5.txt", header = T)
all_df <- rbind(real1_df, real2.1_df, syn1_df, syn2_df, syn3_df, syn4_df, syn5_df)
#add headers: chromosome #, genomic start, genomic stop
real1_truth <- as.data.frame(read.table("/Users/cindyyu/Desktop/CS4220/Data/real1/real1_truth.bed",
header = FALSE, sep="\t",stringsAsFactors=FALSE, quote=""))
real2.1_truth <- as.data.frame(read.table("/Users/cindyyu/Desktop/CS4220/Data/real2_part1/real2_truth_chr1to5.bed",
header = FALSE, sep="\t",stringsAsFactors=FALSE, quote=""))
syn1_truth <- as.data.frame(read.table("/Users/cindyyu/Desktop/CS4220/Data/syn1/syn1_truth.bed",
header = FALSE, sep="\t",stringsAsFactors=FALSE, quote=""))
syn2_truth <- as.data.frame(read.table("/Users/cindyyu/Desktop/CS4220/Data/syn2/syn2_truth.bed",
header = FALSE, sep="\t",stringsAsFactors=FALSE, quote=""))
syn3_truth <- as.data.frame(read.table("/Users/cindyyu/Desktop/CS4220/Data/syn3/syn3_truth.bed",
header = FALSE, sep="\t",stringsAsFactors=FALSE, quote=""))
syn4_truth <- as.data.frame(read.table("/Users/cindyyu/Desktop/CS4220/Data/syn4/syn4_truth.bed",
header = FALSE, sep="\t",stringsAsFactors=FALSE, quote=""))
syn5_truth <- as.data.frame(read.table("/Users/cindyyu/Desktop/CS4220/Data/syn5/syn5_truth.bed",
header = FALSE, sep="\t",stringsAsFactors=FALSE, quote=""))
alltruth_df <- rbind(real1_truth, real2.1_truth, syn1_truth, syn2_truth, syn3_truth, syn4_truth, syn5_truth)
names(alltruth_df) <- c("Chr", "START_POS_REF", "END_POS_REF")
#thought: should we weight the real information more?
#GET RID OF CORREXT X AND Y
#MAKE COLUMN ALL TRUE IN ALL TRUTH
alltruth_df <- alltruth_df %>% mutate(TRUTH = TRUE)
df3 <- all_df %>%
left_join(alltruth_df, by=c('Chr','START_POS_REF', 'END_POS_REF'))
View(df3)
replace_na(df3$TRUTH, FALSE)
df3$TRUTH <- replace_na(df3$TRUTH, FALSE)
split_vals <- sample.split(df3$TRUTH, SplitRatio = 0.65)
library(rpart)
library(rpart)
split_vals <- sample.split(df3$TRUTH, SplitRatio = 0.65)
train_set <- subset(df3, split_vals = TRUE)
test_set <- subset(df3, split_vals = FALSE)
rpart(TRUTH~., data = train_set) -> mod_class
predict(mod_class, test_set, type = 'class') -> result_class
rpart(as.factor(TRUTH)~., data = train_set) -> mod_class
predict(mod_class, test_set, type = 'class') -> result_class
table(test_set$TRUTH, result_class)
View(mod_class)
predict(mod_class, test_set, type = 'class') -> result_class
result_class
length(real1_df)
nrow(real1_df)
View(alltruth_df)
#refitting predictions to be bed file
predictions <- data.frame(Chr = df3$Chr,
START_POS_REF = df3$START_POS_REF,
END_POS_REF = df3$START_POS_REF,
TRUTH=result_class)
predictions <- predictions[1:49320]
predictions <- predictions[1:49320, ]
nrow(predictions)
real1-predictions <- predictions[1:49320, ] |>
filter(TRUTH == TRUE)
real1_predictions <- predictions[1:49320, ] |>
filter(TRUTH == TRUE)
View(real1_predictions)
real1_predictions <- predictions[1:49320, ] |>
filter(TRUTH == TRUE) predictions[, -4]
real1_predictions <- predictions[1:49320, ] |>
filter(TRUTH == TRUE) |>
predictions[, -4]
real1_predictions <- predictions[1:49320, ] |>
filter(TRUTH == TRUE)
real1_predictions <- predictions[, -4]
write.table(real1_predictions, "my-real1-predictions",row.names = F,col.names = F, sep="\t", quote=FALSE)
write.table(real1_predictions, "my-real1-predictions",row.names = F,col.names = F, sep="\t", quote=FALSE)
predictions <- data.frame(Chr = df3$Chr,
START_POS_REF = df3$START_POS_REF,
END_POS_REF = df3$START_POS_REF,
TRUTH=result_class)
real1_predictions <- predictions[1:49320, ] |>
filter(TRUTH == TRUE)
real1_predictions <- predictions[, -4]
write.table(real1_predictions, "my-real1-predictions",row.names = F,col.names = F, sep="\t", quote=FALSE)
getwd()
# set your current working directory
setwd("/Users/cindyyu/Desktop/EEB313/cs4220_snv_ml"); print(getwd())
# clean current envrionement variables
rm(list = ls())
# set your current working directory
setwd("/Users/cindyyu/Desktop/EEB313/cs4220_snv_ml"); print(getwd())
calc.F1 = function(pred,truth) {
# append 'Chr' and 'StartPos'
predv = paste(pred[,1],pred[,2])
truthv = paste(truth[,1],truth[,2])
res = data.frame(matrix(nrow = 1,ncol = 6))
colnames(res) = c('TP','FP','FN','Precision','Recall','F1')
res$TP = sum(predv %in% truthv)
res$FP = sum(!(predv %in% truthv))
res$FN = sum(!(truthv %in% predv))
res$Precision = res$TP/(res$TP + res$FP)
res$Recall = res$TP/(res$TP + res$FN)
res$F1 = (2*res$Precision*res$Recall)/(res$Precision + res$Recall)
return(res)
}
# load ground truth and predictions
truth = read.table('real1_truth.bed', header = F)
mypred = read.table('my-real1-predictions.bed', header = FALSE) #changed to header = false
# load ground truth and predictions
truth = read.table('real1_truth.bed', header = F)
mypred = read.table('my-real1-predictions.bed', header = FALSE) #changed to header = false
head(truth); head(mypred)
f1stats = calc.F1(mypred,truth)
print(f1stats)
real1_predictions <- predictions[1:49320, ] |>
filter(TRUTH == TRUE)
knitr::opts_chunk$set(echo = TRUE)
setwd("/Users/cindyyu/Desktop/CS4220")
library(readxl)
library(tidyverse)
library(caTools)
real1_df <- read.table("snv-parse-real1.txt", header = T)
real2.1_df <- read.table("snv-parse-real2_part1.txt", header = T)
syn1_df <- read.table("snv-parse-syn1.txt", header = T)
syn2_df <- read.table("snv-parse-syn2.txt", header = T)
syn3_df <- read.table("snv-parse-syn3.txt", header = T)
syn4_df <- read.table("snv-parse-syn4.txt", header = T)
syn5_df <- read.table("snv-parse-syn5.txt", header = T)
all_df <- rbind(real1_df, real2.1_df, syn1_df, syn2_df, syn3_df, syn4_df, syn5_df)
#add headers: chromosome #, genomic start, genomic stop
real1_truth <- as.data.frame(read.table("/Users/cindyyu/Desktop/CS4220/Data/real1/real1_truth.bed",
header = FALSE, sep="\t",stringsAsFactors=FALSE, quote=""))
real2.1_truth <- as.data.frame(read.table("/Users/cindyyu/Desktop/CS4220/Data/real2_part1/real2_truth_chr1to5.bed",
header = FALSE, sep="\t",stringsAsFactors=FALSE, quote=""))
syn1_truth <- as.data.frame(read.table("/Users/cindyyu/Desktop/CS4220/Data/syn1/syn1_truth.bed",
header = FALSE, sep="\t",stringsAsFactors=FALSE, quote=""))
syn2_truth <- as.data.frame(read.table("/Users/cindyyu/Desktop/CS4220/Data/syn2/syn2_truth.bed",
header = FALSE, sep="\t",stringsAsFactors=FALSE, quote=""))
syn3_truth <- as.data.frame(read.table("/Users/cindyyu/Desktop/CS4220/Data/syn3/syn3_truth.bed",
header = FALSE, sep="\t",stringsAsFactors=FALSE, quote=""))
syn4_truth <- as.data.frame(read.table("/Users/cindyyu/Desktop/CS4220/Data/syn4/syn4_truth.bed",
header = FALSE, sep="\t",stringsAsFactors=FALSE, quote=""))
syn5_truth <- as.data.frame(read.table("/Users/cindyyu/Desktop/CS4220/Data/syn5/syn5_truth.bed",
header = FALSE, sep="\t",stringsAsFactors=FALSE, quote=""))
alltruth_df <- rbind(real1_truth, real2.1_truth, syn1_truth, syn2_truth, syn3_truth, syn4_truth, syn5_truth)
names(alltruth_df) <- c("Chr", "START_POS_REF", "END_POS_REF")
#thought: should we weight the real information more?
#GET RID OF CORREXT X AND Y
#MAKE COLUMN ALL TRUE IN ALL TRUTH
alltruth_df <- alltruth_df %>% mutate(TRUTH = TRUE)
df3 <- all_df %>%
left_join(alltruth_df, by=c('Chr','START_POS_REF', 'END_POS_REF'))
df3$TRUTH <- replace_na(df3$TRUTH, FALSE)
consensus_df <- all_df %>%
mutate(two_plus = rowSums(select(., FILTER_Mutect2, FILTER_Freebayes, FILTER_Varscan, FILTER_Vardict)) >= 2)
#splitting
split_vals <- sample.split(df3$TRUTH, SplitRatio = 0.65)
train_set <- subset(df3, split_vals = TRUE)
test_set <- subset(df3, split_vals = FALSE)
#model
rpart(as.factor(TRUTH)~., data = train_set) -> mod_class
predict(mod_class, test_set, type = 'class') -> result_class
table(test_set$TRUTH, result_class)
#refitting predictions to be bed file
predictions <- data.frame(Chr = df3$Chr,
START_POS_REF = df3$START_POS_REF,
END_POS_REF = df3$START_POS_REF,
TRUTH=result_class)
real1_predictions <- predictions[1:49320, ] |>
filter(TRUTH == TRUE)
real1_predictions <- predictions[, -4]
write.table(real1_predictions, "my-real1-predictions",row.names = F,col.names = F, sep="\t", quote=FALSE)
#refitting predictions to be bed file
predictions <- data.frame(Chr = df3$Chr,
START_POS_REF = df3$START_POS_REF,
END_POS_REF = df3$START_POS_REF,
TRUTH=result_class)
real1_predictions <- predictions[1:49320, ]
real1_predictions <- predictions[1:49320, ] |>
filter(TRUTH == TRUE)
real1_predictions <- predictions[, -4]
write.table(real1_predictions, "my-real1-predictions",row.names = F,col.names = F, sep="\t", quote=FALSE)
# clean current envrionement variables
rm(list = ls())
# set your current working directory
setwd("/Users/cindyyu/Desktop/EEB313/cs4220_snv_ml"); print(getwd())
calc.F1 = function(pred,truth) {
# append 'Chr' and 'StartPos'
predv = paste(pred[,1],pred[,2])
truthv = paste(truth[,1],truth[,2])
res = data.frame(matrix(nrow = 1,ncol = 6))
colnames(res) = c('TP','FP','FN','Precision','Recall','F1')
res$TP = sum(predv %in% truthv)
res$FP = sum(!(predv %in% truthv))
res$FN = sum(!(truthv %in% predv))
res$Precision = res$TP/(res$TP + res$FP)
res$Recall = res$TP/(res$TP + res$FN)
res$F1 = (2*res$Precision*res$Recall)/(res$Precision + res$Recall)
return(res)
}
# load ground truth and predictions
truth = read.table('real1_truth.bed', header = F)
mypred = read.table('my-real1-predictions.bed', header = FALSE) #changed to header = false
head(truth); head(mypred)
f1stats = calc.F1(mypred,truth)
print(f1stats)
